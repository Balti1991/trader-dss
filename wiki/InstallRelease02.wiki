#summary Install Guide for Release 0.2 of the Trader Decision Support System

= Introduction =

This is a rough guide to installing the Trader DSS on a Unix like operating system. I'm using Centos 5 on X86_64

*Note: This is against trunk because the Release 0.2 branch hasn't been created*

= Details =

== Perl Setup ==
  * Install the following. The example here uses the CPAN module to do the work. _Note:_ Date::Manip 6+ requires Perl 5.10+ which isn't the default on most systems yet. If you don't have Perl 5.10 then download Date::Manip 5.x from [http://ftp.esat.net/pub/languages/perl/CPAN/authors/id/S/SB/SBECK/ CPAN] and install it by hand. 
{{{
perl -MCPAN -e shell
o conf prerequisites_policy follow
o conf commit
install Compress::Zlib
install Text::CSV_PP
install Text::CSV_XS
install Date::Manip
install HTML::PullParser
install HTML::Entities
install HTML::Parser
install HTML::TokeParser
install HTML::LinkExtor
install HTML::HeadParser
install HTML::Filter
install HTML::Tagset
install HTML::TreeBuilder
install HTML::TableExtract
install LWP
install Regexp::Common
install Finance::Quote
install Finance::QuoteHist
install DBI
install DBD::Pg
}}}

== Postgresql setup ==
  * install postgres, the primary development platform is Centos 5 with the postgres (8.1.18) that's shipped with it.

== Create the database ==
  * as postgres
{{{
export PGDATA=/postgres/db
export PGDATABASE=trader
echo export PGDATA=$PGDATA >> $HOME/.profile
echo export PGDATABASE=$PGDATABASE >> $HOME/.profile
mkdir $PGDATA
initdb -E UTF8 $PGDATA
pg_ctl -l logfile start  # ignore the warnings about the ports
# create the trader database
createdb trader
# enable plpgsql on the trader database
createlang plpgsql trader # turn on pgsql for triggers
}}}

== Grab a copy of the 0.2 release ==
  * As the postgres user 
{{{
svn co http://trader-dss.googlecode.com/svn/tags/trunk
}}}

== Create the tables etc ==
  * Still as the postgres user
{{{
cd trunk
psql trader -U postgres

trader=# \i tables/create_tables.sql

trader=# \i constraints/create_constraints.sql

trader=# \i functions/create_functions.sql

trader=# \i triggers/update_derived_tables.sql

}}}

== Populate with data ==
  * If your data's coming from the LSE then
{{{
insert into exchange (exch, name, curr_desc, curr_char) values ('L', 'London Stock Exchange', 'GBP', 'Â£');
}}}
  * Load all the share names with
{{{
bin/update-share_names.pl
}}}
  * Load the quotes from with. Beware, this may take days!
{{{
bin/update-quotes.pl
}}}
  * Create a user for the web interface
{{{
insert into users (name, passwd) values ('username of your choice', md5('password of your choice');
}}}

  * setup the web interface
    * install and configure apache
    * install PHP
    * install Pear
{{{
sudo pear install HTML_QuickForm
}}}
    * enable cgi-bin for cgi scripts in apache

== install the web pages and scripts ==
  * copy the html/ directory into `/var/www/html` or the root of your web server.
  * copy the cgi-bin/ directory into `/var/www/cgi-bin` or your cgi-bin directory
  * copy the bin/ directory to your home directory.
  * update `/var/www/html/trader-functions.php` with your server, database, account name and password. _We really should have a config file for those things_.
  * update the scripts in ~/bin with the same server, database, account and password details
  * install [http://www.advsofteng.com/ chart director] into `/var/www/ChartDirector` if you're going to use that to chart your results. The current code depends on it for graphs and charts and it has a generous license for open source / free use.